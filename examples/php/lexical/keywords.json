{
	"symbols":{
		"this":{
			"terminal":true,
			"match":"(this)",
			"matchCaseInsensitive":true
		},
		"enddeclare":{
			"terminal":true,
			"match":"(enddeclare)",
			"matchCaseInsensitive":true
		},
		"endforeach":{
			"terminal":true,
			"match":"(endforeach)",
			"matchCaseInsensitive":true
		},
		"endfor":{
			"terminal":true,
			"match":"(endfor)",
			"lookAhead":"[^e]",
			"matchCaseInsensitive":true
		},
		"endif":{
			"terminal":true,
			"match":"(endif)",
			"matchCaseInsensitive":true
		},
		"endswitch":{
			"terminal":true,
			"match":"(endswitch)",
			"matchCaseInsensitive":true
		},
		"endwhile":{
			"terminal":true,
			"match":"(endwhile)",
			"matchCaseInsensitive":true
		},
		"goto":{
			"terminal":true,
			"match":"(goto)",
			"matchCaseInsensitive":true
		},
		"if":{
			"terminal":true,
			"match":"(if)",
			"matchCaseInsensitive":true
		},
		"implements":{
			"terminal":true,
			"match":"(implements)",
			"matchCaseInsensitive":true
		},
		"include":{
			"terminal":true,
			"match":"(include)",
			"lookAhead":"[^_]",
			"matchCaseInsensitive":true
		},
		"include_once":{
			"terminal":true,
			"match":"(include_once)",
			"matchCaseInsensitive":true
		},
		"instanceof":{
			"terminal":true,
			"match":"(instanceof)",
			"matchCaseInsensitive":true
		},
		"extends":{
			"terminal":true,
			"match":"(extends)",
			"matchCaseInsensitive":true
		},
		"final":{
			"terminal":true,
			"match":"(final)",
			"lookAhead":"[^l]",
			"matchCaseInsensitive":true
		},
		"finally":{
			"terminal":true,
			"match":"(finally)",
			"matchCaseInsensitive":true
		},
		"for":{
			"terminal":true,
			"match":"(for)",
			"lookAhead":"[^e]",
			"matchCaseInsensitive":true
		},
		"foreach":{
			"terminal":true,
			"match":"(foreach)",
			"matchCaseInsensitive":true
		},
		"function":{
			"terminal":true,
			"match":"(function)",
			"matchCaseInsensitive":true
		},
		"global":{
			"terminal":true,
			"match":"(global)",
			"matchCaseInsensitive":true
		},
		"insteadof":{
			"terminal":true,
			"match":"(insteadof)",
			"matchCaseInsensitive":true
		},
		"interface":{
			"terminal":true,
			"match":"(interface)",
			"matchCaseInsensitive":true
		},
		"namespace":{
			"terminal":true,
			"match":"(namespace)",
			"matchCaseInsensitive":true
		},
		"new":{
			"terminal":true,
			"match":"(new)",
			"matchCaseInsensitive":true
		},
		"or":{
			"terminal":true,
			"match":"(or)",
			"matchCaseInsensitive":true
		},
		"print":{
			"terminal":true,
			"match":"(print)",
			"matchCaseInsensitive":true
		},
		"private":{
			"terminal":true,
			"match":"(private)",
			"matchCaseInsensitive":true
		},
		"throw":{
			"terminal":true,
			"match":"(throw)",
			"matchCaseInsensitive":true
		},
		"trait":{
			"terminal":true,
			"match":"(trait)",
			"matchCaseInsensitive":true
		},
		"try":{
			"terminal":true,
			"match":"(try)",
			"matchCaseInsensitive":true
		},
		"use":{
			"terminal":true,
			"match":"(use)",
			"matchCaseInsensitive":true
		},
		"var":{
			"terminal":true,
			"match":"(var)",
			"matchCaseInsensitive":true
		},
		"while":{
			"terminal":true,
			"match":"(while)",
			"matchCaseInsensitive":true
		},
		"xor":{
			"terminal":true,
			"match":"(xor)",
			"matchCaseInsensitive":true
		},
		"yield":{
			"terminal":true,
			"match":"(yield)",
			"matchCaseInsensitive":true
		},
		"abstract":{
			"terminal":true,
			"match":"(abstract)",
			"matchCaseInsensitive":true
		},
		"and":{
			"terminal":true,
			"match":"(and)",
			"matchCaseInsensitive":true
		},
		"as":{
			"terminal":true,
			"match":"(as)",
			"matchCaseInsensitive":true
		},
		"break":{
			"terminal":true,
			"match":"(break)",
			"matchCaseInsensitive":true
		},
		"callable":{
			"terminal":true,
			"match":"(callable)",
			"matchCaseInsensitive":true
		},
		"case":{
			"terminal":true,
			"match":"(case)",
			"matchCaseInsensitive":true
		},
		"catch":{
			"terminal":true,
			"match":"(catch)",
			"matchCaseInsensitive":true
		},
		"class":{
			"terminal":true,
			"match":"(class)",
			"matchCaseInsensitive":true
		},
		"clone":{
			"terminal":true,
			"match":"(clone)",
			"matchCaseInsensitive":true
		},
		"const":{
			"terminal":true,
			"match":"(const)",
			"matchCaseInsensitive":true
		},
		"continue":{
			"terminal":true,
			"match":"(continue)",
			"matchCaseInsensitive":true
		},
		"declare":{
			"terminal":true,
			"match":"(declare)",
			"matchCaseInsensitive":true
		},
		"default":{
			"terminal":true,
			"match":"(default)",
			"matchCaseInsensitive":true
		},
		"do":{
			"terminal":true,
			"match":"(do)",
			"matchCaseInsensitive":true
		},
		"echo":{
			"terminal":true,
			"match":"(echo)",
			"matchCaseInsensitive":true
		},
		"else":{
			"terminal":true,
			"match":"(else)",
			"lookAhead":"[^i]",
			"matchCaseInsensitive":true
		},
		"elseif":{
			"terminal":true,
			"match":"(elseif)",
			"matchCaseInsensitive":true
		},
		"protected":{
			"terminal":true,
			"match":"(protected)",
			"matchCaseInsensitive":true
		},
		"public":{
			"terminal":true,
			"match":"(public)",
			"matchCaseInsensitive":true
		},
		"require":{
			"terminal":true,
			"match":"(require)",
			"lookAhead":"[^_]",
			"matchCaseInsensitive":true
		},
		"require_once":{
			"terminal":true,
			"match":"(require_once)",
			"matchCaseInsensitive":true
		},
		"return":{
			"terminal":true,
			"match":"(return)",
			"matchCaseInsensitive":true
		},
		"static":{
			"terminal":true,
			"match":"(static)",
			"matchCaseInsensitive":true
		},
		"switch":{
			"terminal":true,
			"match":"(switch)",
			"matchCaseInsensitive":true
		}
	},
	"productions":{
		"keyword":[
			["enddeclare"],
			["endforeach"],
			["endfor"],
			["endif"],
			["endswitch"],
			["endwhile"],
			["goto"],
			["if"],
			["implements"],
			["include"],
			["include_once"],
			["instanceof"],
			["extends"],
			["final"],
			["finally"],
			["for"],
			["foreach"],
			["function"],
			["global"],
			["insteadof"],
			["switch"],
			["static"],
			["return"],
			["require_once"],
			["require"],
			["public"],
			["protected"],
			["elseif"],
			["else"],
			["echo"],
			["do"],
			["default"],
			["declare"],
			["continue"],
			["const"],
			["clone"],
			["class"],
			["catch"],
			["case"],
			["callable"],
			["break"],
			["as"],
			["and"],
			["abstract"],
			["yield"],
			["xor"],
			["while"],
			["var"],
			["use"],
			["try"],
			["trait"],
			["throw"],
			["private"],
			["print"],
			["or"],
			["new"],
			["namespace"],
			["interface"]
		]
	},
	"startSymbols":["keyword"]
}
